%div.video-content
  %div.embedded-video
    = render partial: "embed_video", locals: { video: @video }

  %h1
    = @video.name
  %div.author
    %span{:class => "mini-circle-avatar", :style => "background: url(#{@video.user.gravatar_url}) no-repeat 0 0;  background-size: contain"}
    %span.username
      = link_to @video.user.username, @video.user

  %div.description
    = simple_format link_mentions(@video.description)

  %p
    Type:
    = @video.video_type.humanize

  %p
    Created at:
    = @video.created_at.to_formatted_s(:long)

  = render partial: "shared/show_credits", locals: { object: @video, name: "video" }

  = render partial: "shared/ratings", locals: { rateable: @video }

  %p
    - if @video.appearances.present?
      Moves in this video
      %ul
        %li
          - @video.appearances.each do |appearance|
            = link_to appearance.move_name, appearance.move
            = TimeFormatter.new(appearance.minutes, appearance.seconds).format
    - else
      No move appearances added

  - if current_user == @video.user
    %p= link_to "Edit move appearances", edit_appearances_video_path(@video)



  - if @video.user == current_user
    %h1 Stats
    %ul
      %li
        = pluralize @video.views.count, "view"
        |
        = pluralize @video.unique_views_count, "unique view"

    -# TODO: Make this a link
    = button_to "Edit", edit_video_path(@video), method: :get
    = button_to "Delete video", video_path(@video), method: :delete, data: { confirm: "Sure?" }

    - if @video.private?
      = link_to "Share video", new_video_sharing_path(@video)

      - if @video.sharings.present?
        = link_to "Edit sharing", edit_video_sharings_path(@video)

  %div.comments= render @video.comments
  = render partial: "comments/form", locals: { commentable: @video }
